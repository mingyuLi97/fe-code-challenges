import{_ as a,c as s,o as e,N as o}from"./chunks/framework.57e8d462.js";const _=JSON.parse('{"title":"repeated-chars","description":"","frontmatter":{},"headers":[],"relativePath":"questions/hot/repeated-chars/index.md"}'),n={name:"questions/hot/repeated-chars/index.md"},t=o(`<h1 id="repeated-chars" tabindex="-1">repeated-chars <a class="header-anchor" href="#repeated-chars" aria-label="Permalink to &quot;repeated-chars&quot;">​</a></h1><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><blockquote><p>输出字符串中不重复的叠词的数量，叠词指的是字符串中重复的字母 &#39;abcdaaabbccccdddefgaaa&#39; =&gt; 4 解释 [&#39;aaa&#39;, &#39;bb&#39;, &#39;cccc&#39;, &#39;ddd&#39;]</p></blockquote><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><p><code>new Set</code> 没什么好说的，为了数组去重，核心在于这个正则表达式。</p><blockquote><p>在正则表达式中，<code>\\1</code> 表示反向引用第一个捕获组（capturing group）。具体来说，它表示与第一个捕获组（用圆括号括起来的部分）匹配的内容。</p></blockquote><p><code>(\\w)</code> 表示匹配任何单词字符， 因此 <code>/(\\w)\\1+/</code> 表示匹配重复的字符。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">matchRepeatedChars</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Set</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">match</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/(\\w)</span><span style="color:#C678DD;">\\1</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">)).</span><span style="color:#E06C75;">size</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre></div>`,8),c=[t];function p(l,r,d,i,B,h){return e(),s("div",null,c)}const u=a(n,[["render",p]]);export{_ as __pageData,u as default};
